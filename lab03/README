# Стеганографічний Інструмент LSB

Програма для приховування та виявлення текстової інформації в зображеннях за допомогою класичного методу стеганографії LSB (Least Significant Bit). Інструмент реалізовано на Python без використання сторонніх стеганографічних бібліотек для демонстрації фундаментальних принципів роботи алгоритму.

# Опис проекту

Цей Python-скрипт призначений для:

- Вбудовування секретного текстового повідомлення в пікселі цифрового зображення.
- Витягнення прихованого повідомлення із зображення-контейнера.
- Наочної демонстрації того, як незначні зміни в даних зображення дозволяють приховати інформацію, не змінюючи його візуально.

# Функціональність

- **Приховування даних:** Реалізовано функцію `hide_message()`, яка послідовно записує біти повідомлення в найменш значущі біти (LSB) колірних каналів (RGB) кожного пікселя.
- **Витягнення даних:** Реалізовано функцію `extract_message()`, що зчитує LSB з пікселів та відновлює оригінальне повідомлення.
- **Маркер завершення:** Використовується спеціальний розділювач (`||END||`) для точного визначення кінця прихованого повідомлення.
- **Інтерактивний інтерфейс:** Програма надає просте консольне меню для зручної взаємодії з користувачем.

# Системні вимоги

- Python 3.6 або новіша версія.
- Бібліотека `Pillow` для роботи із зображеннями.

# Встановлення та Запуск

**1. Встановлення**

1.  Переконайтесь, що на вашій системі встановлено Python 3.
2.  Збережіть код у файл `steganography.py`.
3.  Встановіть необхідну бібліотеку, виконавши команду в терміналі:

    pip install Pillow

**2. Запуск програми**

Відкрийте термінал (командний рядок) у папці з файлом та виконайте команду:

    python steganography.py

# Інструкція користування

Після запуску програма запропонує меню з трьома опціями:

1.  **Приховати повідомлення:**
    - Введіть шлях до вихідного зображення (наприклад, `my_photo.png`).
    - Введіть секретне повідомлення.
    - Вкажіть ім'я файлу для збереження результату (наприклад, `secret_image.png`).
2.  **Витягти повідомлення:**
    - Введіть шлях до зображення, в якому приховано повідомлення.
3.  **Вихід.**

# Автор

Борисенко Олексій, студент ХНЕУ ім. С. Кузнеця
